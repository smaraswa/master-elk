apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: elk
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
    pipeline.workers: 4
    pipeline.batch.size: 125
    queue.type: persisted
    queue.page_capacity: 64mb
    queue.max_bytes: 512mb
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    filter {
      grok {
          match => { "message" => "%{SYSLOGLINE}" }
      }
      date {
        match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
      }
      geoip {
          source => "clientip"
        }
    }
    output {
      elasticsearch {
        hosts => ["http://elasticsearch-0.elasticsearch:9200", "http://elasticsearch-1.elasticsearch:9200", "http://elasticsearch-2.elasticsearch:9200"]
        
        
      }
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  namespace: elk
data:
  pipeline.conf: |
    input {
      tcp {
        port => 5045
        codec => json
       
        
      }
      http {
        port => 9700
        codec => json
        threads => 32
        

      }
    }
    filter {
      if [type] == "tcp" {
        date {
          match => [ "timeMillis", "UNIX_MS" ]
        }
      } else if [type] == "http" {
        grok {
          match => [ "message", "%{COMBINEDAPACHELOG}" ]
        }
        date {
          match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
        }
      }
    }
    output {
      elasticsearch {
        hosts => ["http://elasticsearch-0.elasticsearch:9200", "http://elasticsearch-1.elasticsearch:9200", "http://elasticsearch-2.elasticsearch:9200"]
        index => "mule-http-logs"
      }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: elk
spec:
  selector:
    matchLabels:
      app: logstash
  replicas: 2
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:8.6.0
          env:
            - name: LS_JAVA_OPTS
              value: "-Xmx8g -Xms8g"
          resources:
            requests:
              cpu: 1000m
              memory: 2Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          ports:
            - containerPort: 5044
              name: beats
            - containerPort: 5045
              name: tcp
            - containerPort: 9700
              name: http
          volumeMounts:
            - name: config
              mountPath: /usr/share/logstash/config/logstash.yml
              subPath: logstash.yml
            - name: pipeline
              mountPath: /usr/share/logstash/pipeline/pipeline.conf
              subPath: pipeline.conf
      volumes:
        - name: config
          configMap:
            name: logstash-config
        - name: pipeline
          configMap:
            name: logstash-pipeline

---

apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: elk
spec:
  selector:
    app: logstash
  type: NodePort
  ports:
    - name: beats
      port: 5044
      targetPort: 5044
      nodePort: 31300
    - name: tcp
      port: 5045
      targetPort: 5045
      nodePort: 31200
    - name: http
      port: 9700
      targetPort: 9700
      nodePort: 31400
